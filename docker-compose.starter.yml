
networks:
  bisheng-network:
    name: bisheng-network
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:
  etcd_data:
  
services:
  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: bisheng-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: bisheng_production
      POSTGRES_USER: bisheng_prod
      POSTGRES_PASSWORD: CHANGE_THIS_TO_VERY_STRONG_PASSWORD_32_CHARS_MIN
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs/postgresql:/var/log/postgresql
    ports:
      - "5432:5432"
    networks:
      - bisheng-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bisheng_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: bisheng-redis
    restart: unless-stopped
    command: redis-server --requirepass CHANGE_THIS_REDIS_PASSWORD_STRONG_32_CHARS
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - bisheng-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Etcd
  etcd:
    image: bitnamilegacy/etcd:3.5
    container_name: bisheng-etcd
    restart: unless-stopped
    environment:
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: http://etcd:2379
    volumes:
      - etcd_data:/bitnami/etcd
    ports:
      - "2379:2379"
    networks:
      - bisheng-network
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO
  minio:
    image: minio/minio:latest
    container_name: bisheng-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: CHANGE_THIS_MINIO_USER
      MINIO_ROOT_PASSWORD: CHANGE_THIS_MINIO_PASSWORD_MIN_32_CHARS
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - bisheng-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: bisheng-elasticsearch
    restart: unless-stopped
    user: "1000:1000"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - ELASTIC_PASSWORD=CHANGE_THIS_ELASTIC_PASSWORD_STRONG_32_CHARS
      - bootstrap.memory_lock=false
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - bisheng-network
    healthcheck:
      test: ["CMD-SHELL", "curl -u elastic:CHANGE_THIS_ELASTIC_PASSWORD_STRONG_32_CHARS -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  # Milvus
  milvus:
    image: milvusdb/milvus:v2.3.0
    container_name: bisheng-milvus
    command: ["milvus", "run", "standalone"]
    restart: unless-stopped
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MINIO_ACCESS_KEY: CHANGE_THIS_MINIO_USER
      MINIO_SECRET_KEY: CHANGE_THIS_MINIO_PASSWORD_MIN_32_CHARS
    volumes:
      - ./data/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    networks:
      - bisheng-network
    depends_on:
      etcd:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
