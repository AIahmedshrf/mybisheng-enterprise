# ========================================
# Bisheng Enterprise - Development Environment
# ========================================
# إعدادات خاصة ببيئة التطوير (Codespace)
# الاستخدام: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d
# ========================================

version: '3.8'

services:

  # ==================== PostgreSQL (Dev Overrides) ====================
  postgres:
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-bisheng_dev}
      POSTGRES_USER: ${POSTGRES_USER:-bisheng}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_postgres_pass_123}
    
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2g
        reservations:
          cpus: '0.5'
          memory: 1g
    
    # إضافة pgAdmin للتطوير (اختياري)
    labels:
      - "dev.bisheng.service=database"
      - "dev.bisheng.type=core"

  # ==================== Redis (Dev Overrides) ====================
  redis:
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-dev_redis_pass_123}
      --maxmemory ${REDIS_MAXMEMORY:-1gb}
      --maxmemory-policy ${REDIS_MAXMEMORY_POLICY:-allkeys-lru}
      --appendonly no
      --save ""
    
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1g
        reservations:
          cpus: '0.25'
          memory: 512m
    
    labels:
      - "dev.bisheng.service=cache"
      - "dev.bisheng.type=core"

  # ==================== Elasticsearch (Dev Overrides) ====================
  elasticsearch:
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - bootstrap.memory_lock=false
    
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1g
        reservations:
          cpus: '0.5'
          memory: 512m
    
    labels:
      - "dev.bisheng.service=search"
      - "dev.bisheng.type=core"

  # ==================== Milvus (Dev Overrides) ====================
  milvus:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2g
        reservations:
          cpus: '0.5'
          memory: 1g
    
    labels:
      - "dev.bisheng.service=vectordb"
      - "dev.bisheng.type=core"

  # ==================== MinIO (Dev Overrides) ====================
  minio:
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      MINIO_REGION: ${MINIO_REGION:-us-east-1}
      MINIO_BROWSER: "on"
    
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512m
        reservations:
          cpus: '0.25'
          memory: 256m
    
    labels:
      - "dev.bisheng.service=storage"
      - "dev.bisheng.type=core"

  # ==================== Backend (Dev Overrides) ====================
  backend:
    environment:
      # Database
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-bisheng_dev}
      POSTGRES_USER: ${POSTGRES_USER:-bisheng}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_postgres_pass_123}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dev_redis_pass_123}
      
      # Development specific
      DEBUG: "true"
      LOG_LEVEL: DEBUG
      ENVIRONMENT: development
      HOT_RELOAD: "true"
      
      # API Keys (استخدم مفاتيحك هنا)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
    
    # تمكين Hot Reload
    volumes:
      - ./src/backend:/app:cached
      - ./data/bisheng:/app/data
      - ./logs/backend:/app/logs
      - ./configs/bisheng:/app/config:ro
    
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 3g
        reservations:
          cpus: '0.5'
          memory: 1g
    
    labels:
      - "dev.bisheng.service=api"
      - "dev.bisheng.type=app"
      - "dev.bisheng.hot-reload=enabled"

  # ==================== Frontend (Dev Overrides) ====================
  frontend:
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001}
      VITE_APP_TITLE: "Bisheng Enterprise (Dev)"
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
    
    # تمكين Hot Reload
    volumes:
      - ./src/frontend:/app:cached
      - ./logs/frontend:/app/logs
      - /app/node_modules
    
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512m
        reservations:
          cpus: '0.25'
          memory: 256m
    
    labels:
      - "dev.bisheng.service=ui"
      - "dev.bisheng.type=app"
      - "dev.bisheng.hot-reload=enabled"

  # ==================== Nginx (Dev Overrides) ====================
  nginx:
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./logs/nginx:/var/log/nginx
    
    labels:
      - "dev.bisheng.service=proxy"
      - "dev.bisheng.type=infrastructure"

  # ==================== Prometheus (Dev) ====================
  prometheus:
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--log.level=info'
    
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1g
    
    labels:
      - "dev.bisheng.service=metrics"
      - "dev.bisheng.type=monitoring"

  # ==================== Grafana (Dev) ====================
  grafana:
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: "true"
      GF_SERVER_ROOT_URL: http://localhost:${GRAFANA_PORT:-3002}
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: Viewer
      GF_INSTALL_PLUGINS: redis-datasource
      GF_LOG_LEVEL: info
    
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512m
    
    labels:
      - "dev.bisheng.service=dashboard"
      - "dev.bisheng.type=monitoring"

  # ==================== Redis Commander (Dev Tool) ====================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: bisheng-redis-commander
    hostname: redis-commander
    restart: ${RESTART_POLICY:-unless-stopped}
    
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-dev_redis_pass_123}
      HTTP_USER: admin
      HTTP_PASSWORD: admin
    
    ports:
      - "8081:8081"
    
    networks:
      - bisheng-network
    
    depends_on:
      - redis
    
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256m
    
    labels:
      - "dev.bisheng.service=redis-ui"
      - "dev.bisheng.type=devtool"
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"

  # ==================== Adminer (Database UI) ====================
  adminer:
    image: adminer:latest
    container_name: bisheng-adminer
    hostname: adminer
    restart: ${RESTART_POLICY:-unless-stopped}
    
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: nette
    
    ports:
      - "8082:8080"
    
    networks:
      - bisheng-network
    
    depends_on:
      - postgres
    
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256m
    
    labels:
      - "dev.bisheng.service=db-ui"
      - "dev.bisheng.type=devtool"
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"

  # ==================== Mailhog (Email Testing) ====================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: bisheng-mailhog
    hostname: mailhog
    restart: ${RESTART_POLICY:-unless-stopped}
    
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    
    networks:
      - bisheng-network
    
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128m
    
    labels:
      - "dev.bisheng.service=mail"
      - "dev.bisheng.type=devtool"
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"

  # ==================== Portainer (Docker UI - Optional) ====================
  portainer:
    image: portainer/portainer-ce:latest
    container_name: bisheng-portainer
    hostname: portainer
    restart: ${RESTART_POLICY:-unless-stopped}
    
    command: -H unix:///var/run/docker.sock
    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    
    ports:
      - "9000:9000"
      - "9443:9443"
    
    networks:
      - bisheng-network
    
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256m
    
    labels:
      - "dev.bisheng.service=docker-ui"
      - "dev.bisheng.type=devtool"
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"

# ==================== Volumes الإضافية للتطوير ====================
volumes:
  portainer_data:
    name: bisheng_dev_portainer_data

# EOF
