version: '3.8'

networks:
  bisheng-network:
    driver: bridge
    name: bisheng-network

volumes:
  postgres_data:
    name: bisheng_postgres_data
  redis_data:
    name: bisheng_redis_data
  minio_data:
    name: bisheng_minio_data
  etcd_data:
    name: bisheng_etcd_data
  elasticsearch_data:
    name: bisheng_elasticsearch_data
  milvus_data:
    name: bisheng_milvus_data

services:
  # 1. PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bisheng-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: bisheng
      POSTGRES_PASSWORD: bisheng123
      POSTGRES_DB: bisheng
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bisheng -d bisheng"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bisheng-network

  # 2. Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: bisheng-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bisheng-network

  # 3. Etcd for Milvus
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: bisheng-etcd
    restart: unless-stopped
    environment:
      ETCD_AUTO_COMPACTION_MODE: revision
      ETCD_AUTO_COMPACTION_RETENTION: "1000"
      ETCD_QUOTA_BACKEND_BYTES: "4294967296"
      ETCD_SNAPSHOT_COUNT: "50000"
      ALLOW_NONE_AUTHENTICATION: "yes"
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    volumes:
      - etcd_data:/etcd
    ports:
      - "2379:2379"
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bisheng-network

  # 4. MinIO Object Storage
  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: bisheng-minio
    restart: unless-stopped
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server /minio_data --console-address ":9001"
    volumes:
      - minio_data:/minio_data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bisheng-network

  # 5. Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: bisheng-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    networks:
      - bisheng-network

  # 6. Milvus Vector Database
  milvus:
    image: milvusdb/milvus:v2.3.3
    container_name: bisheng-milvus
    restart: unless-stopped
    environment:
      ETCD_ENDPOINTS: bisheng-etcd:2379
      MINIO_ADDRESS: bisheng-minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_USE_SSL: "false"
      MINIO_BUCKET_NAME: milvus
      COMMON_STORAGETYPE: minio
    command: ["milvus", "run", "standalone"]
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      etcd:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 90s
    networks:
      - bisheng-network

  # 7. Bisheng Backend
  backend:
    image: dataelement/bisheng-backend:latest
    container_name: bisheng-backend
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: "postgresql://bisheng:bisheng123@bisheng-postgres:5432/bisheng"
      POSTGRES_HOST: bisheng-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: bisheng
      POSTGRES_PASSWORD: bisheng123
      POSTGRES_DB: bisheng
      
      # Redis
      REDIS_URL: "redis://bisheng-redis:6379/0"
      REDIS_HOST: bisheng-redis
      REDIS_PORT: 6379
      
      # Milvus
      MILVUS_HOST: bisheng-milvus
      MILVUS_PORT: 19530
      
      # Elasticsearch
      ELASTICSEARCH_URL: "http://bisheng-elasticsearch:9200"
      
      # MinIO
      MINIO_ENDPOINT: "bisheng-minio:9000"
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: milvus
      
      # Application
      PYTHONUNBUFFERED: "1"
      API_HOST: "0.0.0.0"
      API_PORT: "7860"
    volumes:
      - ./data/backend:/app/data
    ports:
      - "7860:7860"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      milvus:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - bisheng-network

  # 8. Bisheng Frontend
  frontend:
    image: dataelement/bisheng-frontend:latest
    container_name: bisheng-frontend
    restart: unless-stopped
    environment:
      BACKEND_URL: "http://bisheng-backend:7860"
      PUBLIC_API_BASE_URL: "http://localhost:7860"
    ports:
      - "3001:3001"
    depends_on:
      backend:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - bisheng-network

  # 7. Bisheng Backend
  backend:
    image: dataelement/bisheng-backend:latest
    container_name: bisheng-backend
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: "postgresql://bisheng:bisheng123@bisheng-postgres:5432/bisheng"
      POSTGRES_HOST: bisheng-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: bisheng
      POSTGRES_PASSWORD: bisheng123
      POSTGRES_DB: bisheng
      
      # Redis
      REDIS_URL: "redis://bisheng-redis:6379/0"
      REDIS_HOST: bisheng-redis
      REDIS_PORT: 6379
      
      # Milvus
      MILVUS_HOST: bisheng-milvus
      MILVUS_PORT: 19530
      
      # Elasticsearch
      ELASTICSEARCH_URL: "http://bisheng-elasticsearch:9200"
      
      # MinIO
      MINIO_ENDPOINT: "bisheng-minio:9000"
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: milvus
      
      # Application
      PYTHONUNBUFFERED: "1"
      API_HOST: "0.0.0.0"
      API_PORT: "7860"
    volumes:
      - ./data/backend:/app/data
    ports:
      - "7860:7860"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      milvus:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - bisheng-network

  # 8. Bisheng Frontend
  frontend:
    image: dataelement/bisheng-frontend:latest
    container_name: bisheng-frontend
    restart: unless-stopped
    environment:
      BACKEND_URL: "http://bisheng-backend:7860"
      PUBLIC_API_BASE_URL: "http://localhost:7860"
    ports:
      - "3001:3001"
    depends_on:
      backend:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - bisheng-network
